name: DumprX Using Crave
 
on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: "Direct Link of the ROM/Firmware to Dump"
        required: true
      EXTRA_CMD:
        description: "Any Extra Command to Run Before Dump"
        required: false
        default: "echo 'Hello World!'"

defaults:
  run:
    shell: bash

env:
  # ROM
  ROM_URL: ${{ https://drive.google.com/file/d/1IvaeseKEAezX4X8SN-MRAZniu5euH3Li/view?usp=drivesdk }}

  # Gitlab
  PUSH_TO_GITLAB: true

  # Extra Command
  EXTRA_CMD: ${{ github.event.inputs.EXTRA_CMD }}

jobs:
  start:
    runs-on: ubuntu-latest

    steps:
      # Cleanup 
      - name: Cleanup Step
        run: rm -rf *
      # Check-out in order to access the repository's files.
      - name: Check-out to repository
        uses: actions/checkout@v4
      # Set-up a spearate directory for the device.
      - name: Set-up workspace environment
        run: |
          mkdir workspace
          cd workspace
        continue-on-error: true      
      - name: Configure the 'crave' environment
        run: |
            if [ "${DCDEVSPACE}" == "1" ]; then
              echo 'No need to set up crave, we are already running in devspace!'
            else
              curl -s https://raw.githubusercontent.com/accupara/crave/master/get_crave.sh | bash -s --
              mkdir ${HOME}/bin/
              mv ${PWD}/crave ${HOME}/bin/
              sudo ln -sf /home/${USER}/bin/crave /usr/bin/crave
              mkdir ~/.ssh
            fi
      - name: Configure Crave Credentials
        run: | 
              envsubst < ${PWD}/crave.conf.sample >> ${PWD}/crave.conf
              rm -rf ${PWD}/crave.conf.sample
        env:
             CRAVE_USERNAME: ${{  secrets.CRAVE_USERNAME  }}
             CRAVE_TOKEN: ${{  secrets.CRAVE_TOKEN  }}        

      - name: Run crave devspace
        run: |
               crave devspace -- "if tmux has-session -t ghactionsdump; then 
                 echo "Runner is already Running" 
               else 
                 tmux kill-session -t ghactionsdump;
                 tmux new-session -d -s ghactionsdump
                 tmux send-keys -t ghactionsdump './actions-runner-dump/run.sh' Enter 
                 echo "Runner Started"
               fi "
  build:
    runs-on: self-hosted
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      # Clean the workflow before initialization.
      - name: Cleanup
        run: rm -rf ${PWD}/* /crave-devspaces/.repo
      # Check-out in order to access the repository's files.
      - name: Check-out to repository
        uses: actions/checkout@v4
      # Set-up a spearate directory for the device.
      - name: Set-up workspace environment
        run: |
          mkdir workspace
          cd workspace
        continue-on-error: true      
      - name: Configure the 'crave' environment
        run: |
            if [ "${DCDEVSPACE}" == "1" ]; then
              echo 'No need to set up crave, we are already running in devspace!'
            else
              curl -s https://raw.githubusercontent.com/accupara/crave/master/get_crave.sh | bash -s --
              mkdir ${HOME}/bin/
              mv ${PWD}/crave ${HOME}/bin/
              sudo ln -sf /home/${USER}/bin/crave /usr/bin/crave
              mkdir ~/.ssh
            fi
      - name: Extract using Crave
        timeout-minutes: 180  
        run: |
            git clone https://github.com/DumprX/DumprX
            cd DumprX
                echo "${{ secrets.GITLAB_TOKEN }}" > .gitlab_token  # Only for Gitlab
                echo "${{ secrets.GITLAB_GROUP }}" > .gitlab_group  # Only for Gitlab
                echo "${{ secrets.GITLAB_INSTANCE }}" > .gitlab_instance  # Only for Gitlab
                echo "${{ secrets.PRIV_SSH_KEY }}" > id_rsa  # Only for Gitlab
                echo "${{ secrets.BOT_TOKEN }}" > .tg_token
                echo "${{ secrets.CHAT_ID }}" > .tg_chat
              crave push --projectID 77 .gitlab_token -d /tmp/src/DumprX/.gitlab_token
              crave push --projectID 77 .gitlab_group -d /tmp/src/DumprX/.gitlab_group
              crave push --projectID 77 id_rsa -d /tmp/src/DumprX/id_rsa
              crave push --projectID 77 .gitlab_instance -d /tmp/src/DumprX/.gitlab_instance
              crave push --projectID 77 .tg_token -d /tmp/src/DumprX/.tg_token
              crave push --projectID 77 .tg_chat -d /tmp/src/DumprX/.tg_chat
              crave run --projectID 77 -- "git pull; \
              rm -rf out/  input/; \
              sudo bash setup.sh; \
              sudo apt install -y f2fs-tools; \
              git config --global user.name "${{ github.actor }}"; \
              git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"; \
              ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts;\
              ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts; \
              ssh-keyscan ${{ secrets.GITLAB_INSTANCE }} -t ed25519 >> ~/.ssh/known_hosts;\
              mv id_rsa /home/admin/.ssh/id_rsa;\
              ssh-add ~/.ssh/id_rsa; \
              chmod 600 ~/.ssh/id_rsa; \
              
              if grep -q "HOST \*" ~/.ssh/config && grep -q "StrictHostKeyChecking no" ~/.ssh/config; then

              echo "Changes are already present"

              else

              echo "HOST *" > ~/.ssh/config

              echo "StrictHostKeyChecking no" >> ~/.ssh/config

              fi; \
              ${{ github.event.inputs.EXTRA_CMD }}; \
              chmod +x dumper.sh;\
              ./dumper.sh '${{ github.event.inputs.ROM_URL }}' 
              
              # This build was run from OkBuddyGSI 
              # Triggered by ${{ github.actor }} representing OkBuddyGSI
              
              # Respect the Queue
              # Respect the rules"
      # Only reach this when the user killed the workflow.
      - name: Execute if the job is cancelled
        if: ${{ cancelled() }}
        run: cd DumprX; crave stop --projectID 77 --all
